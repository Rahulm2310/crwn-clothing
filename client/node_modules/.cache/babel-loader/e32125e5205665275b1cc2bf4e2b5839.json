{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAHUL\\\\Documents\\\\web dev projects\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [newUserCredentials, setNewUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = newUserCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't Match !\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewUserCredentials({ ...newUserCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/RAHUL/Documents/web dev projects/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","SignUpContainer","SignUpTitle","signUpStart","connect","useState","SignUp","newUserCredentials","setNewUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [newUserCredentials, setNewUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = newUserCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords don't Match !\");\r\n\r\n      return;\r\n    }\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setNewUserCredentials({ ...newUserCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n\r\n      <span>Sign up with your email and password</span>\r\n\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}